(function(root, factory) {
	if (typeof(define) === 'function' && define.amd) {
		define(['riot', 'jquery', '$'], function(riot, jquery, $) {
			return factory(riot, jquery, $);
		});
	}
	else if (typeof(module) !== 'undefined' && typeof module.exports !== 'undefined') {
		var riot = require('riot');
		var jquery = require('jquery');
		var $ = require('$');
		return factory(riot, jquery, $);
	}
	else {
		return factory(root.riot, root.jquery, root.$);
	}
})(this, function(riot, jquery, $) {
	/*
	 * grunt-modularize
	 * https://github.com/frisb/grunt-modularize
	 *
	 * Copyright (c) 2015 frisB.com
	 * Licensed under the MIT license.
	 */
	
	'use strict';
	
	module.exports = function(grunt) {
	
	  // Project configuration.
	  grunt.initConfig({
	    // Configuration to be run (and then tested).
	    modularize: {
	      compile: {
	        options: {
	          deps: [
	            'riot',
	            'jquery', '$'
	          ],
	          exports: 'riot'
	        },
	        files: {
	          src: 'Gruntfile.js',
	          dest: 'test/expected/concatFile.js'
	        }
	      }
	    },
			nodeunit: {
				tasks: ['test/test.js']
			},
			clean: {
				test: ['test/tmp/**']
			}
		});
	
		grunt.loadTasks('tasks');
		grunt.loadNpmTasks('grunt-contrib-clean');
		grunt.loadNpmTasks('grunt-contrib-nodeunit');
	
	  grunt.registerTask('default', ['clean', 'modularize', 'nodeunit', 'clean']);
	};


	return riot;
});